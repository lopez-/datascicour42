setwd("c:/Users/Victor/Desktop/Quizz 3")
domestic <- read.csv("domestic.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
eds <- read.csv("getdata-data-EDSTATS_Country.csv",header=TRUE)
names(eds)[1] <- "CountryID"
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
mean(domestic$GDP)
grep("^United",countryNames), 3
grep("^United",countryNames)
eds <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",header=TRUE)
domestic
eds <- tbl_df(eds)
eds
names(eds)[1] <- "CountryID"
eds
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
mrgd
names(mrgd)
mrgd[,10]
merged[,1:5]
mrgd[,1:5]
mrgd[,6:10]
mrgd[,11:15]
View(mrgd)
names(mrgd)
?grep
grep("End",mrgd[,13],value=TRUE)
head(mrgd[,13])
grep("Fiscal",mrgd[,13],value=TRUE)
grep("Fiscal year end: June",mrgd[,13],value=TRUE)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
length(sampleTimes)
grep("^2012",sampleTimes)
length(grep("^2012",sampleTimes))
format(sampleTimes, %a %Y)
formatDate <- format(sampleTimes, "%a %Y")
formatDate
grep("^lu. 2012",formatDate)
length(grep("^lu. 2012",formatDate))
x <- rnorm(100)
hist(x)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline()
?par()
trellis.par.set()
?trellis.par.set()
?splom()
?print.trellis()
library(datasets)
data(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~facets=.~(Month))
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~Month)
setwd("C:/Users/Victor/Desktop/Project 2")
library(dplyr)
library(ggplot2)
code <- readRDS("Source_Classification_Code.rds")
code <- tbl_df(code)
summary <- readRDS("summarySCC_PM25.rds")
# plot 1
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
totals[,2] <- totals[,2]/1000000
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# plot 2
balt <- subset(summary,fips=="24510")
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
# plot 3
totals_type <- summary %>%
group_by(year,type) %>%
summarise(sum(Emissions))
colnames(totals_type)[3] <- "Emissions"
totals_type[3] <- totals_type[3]/1000
qplot(year,Emissions,data=totals_type,color=type,facets=type~.)
?qplot
# plot 1
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
totals[,2] <- totals[,2]/1000000
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# plot 2
balt <- subset(summary,fips=="24510")
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
# plot 3
totals_type <- summary %>%
group_by(year,type) %>%
summarise(sum(Emissions))
colnames(totals_type)[3] <- "Emissions"
totals_type[3] <- totals_type[3]/1000
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(0,5))
# plot 1
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
totals[,2] <- totals[,2]/1000000
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# plot 2
balt <- subset(summary,fips=="24510")
totals_balt <- balt %>%
)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=3000)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(1000,3000)
)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(1000,3000))
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(1000,4000))
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,8000))
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000))
totals_type
qplot(year,Emissions,data=totals_type,color=type,facets=type~.)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000))
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000)) + geom_line()
?geom_line
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000)) + geom_line()
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000)) + geom_line()
totals_type <- balt %>%
group_by(year,type) %>%
summarise(sum(Emissions))
colnames(totals_type)[3] <- "Emissions"
totals_type[3] <- totals_type[3]/1000
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylim=c(100,6000)) + geom_line()
qplot(year,Emissions,data=totals_type,color=type,facets=type~.) + geom_line()
code
code <- readRDS("Source_Classification_Code.rds")
code
head(code)
head(code)
tail(code)
str(code)
View(code)
coal <- subset(code,EI.Sector=="Coal$")
?gsub
grep("Coal$",code)
grep("Fuel Comb - Electric Generation - Coal",code)
grep("Coal$",code$EI.Sector)
class(grep("Coal$",code$EI.Sector))
?rbind
coal.code <- grep("Coal$",code$EI.Sector)
coal <- data.frame()
coal <- for(i in coal.code){
rbind(coal, coal.code[i])
}
coal.code[1]
coal.code[1,]
coal <- for(i in coal.code){
rbind(coal, code[i])
}
coal.code <- grep("Coal$",code$EI.Sector)
coal <- data.frame()
coal <- for(i in coal.code){
rbind(coal, code[i,])
}
code[1,]
source('~/.active-rstudio-document', echo=TRUE)
coal.code <- grep("Coal$",code$EI.Sector)
coal <- data.frame()
for(i in coal.code){
rbind(coal, code[i,])
}
coal
coal.code <- grep("Coal$",code$EI.Sector)
coal <- data.frame()
for(i in coal.code){
coal <- rbind(coal, code[i,])
}
tbl_df(coal)
tbl_df(coal[,4])
tbl_df(coal)[,4]
View(summary)
View(coal)
?melt
library(reshape2)
str(coal)
length(coal)
?nrow
nrow(coal)
str(summary)
scc <- data.frame()
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,2])
scc <- rbind(scc,temp)
}
scc
temp <- subset(summary,summary[,2]==coal[1,2])
temp
coal[1,2]
temp <- subset(summary,summary[,2]==coal[1,1])
coal[1,1]
scc <- data.frame()
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
scc <- rbind(scc,temp)
}
temp <- subset(summary,summary[,2]==coal[1,1])
temp <- subset(summary,summary[,2]==coal[2,1])
coal.code <- grep("Coal$",code$EI.Sector)
coal <- data.frame()
for(i in coal.code){
coal <- rbind(coal, code[i,])
}
scc <- data.frame()
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(j in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
temp <- subset(summary,summary[,2]==coal[1,1])
temp[1,]
scc <- rbind(scc,temp[1,])
scc
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(j in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
View(scc)
View(scc)
View(scc)
?remove
remove(scc)
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(j in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
scc <- data.frame()
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(j in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
scc <- data.frame()
temp <- data.frame()
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(i in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
for(j in nrow(temp)){
scc <- rbind(scc,temp[j,])
}
}
for(i in nrow(coal)){
temp <- subset(summary,summary[,2]==coal[i,1])
}
nrow(coal)
temp <- subset(summary,summary[,2]==coal[nrow(coal),1])
temp <- subset(summary,summary[,2]==coal[98,1])
temp <- subset(summary,summary[,2]==coal[9,1])
qplot(year,Emissions,data=totals_type,color=type,facets=type~.) + geom_line()
# set the working directory on which the datasets are stored
setwd("C:/Users/Victor/Desktop/Project 2")
# load all the libraries that will be required below
library(dplyr)
library(ggplot2)
# load the data
code <- readRDS("Source_Classification_Code.rds")
summary <- readRDS("summarySCC_PM25.rds")
# create plot 1
# 1.1 - sum all the emissions from summary and group it by year through dplyr
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
# 1.2 - in order to have a clearer view on the plot, divide emissions by 1m
totals[,2] <- totals[,2]/1000000
# 1.3 - plot the graph
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# create plot 2
# 2.1 - create a data frame "balt" from its corresponding code, fips, from summary in order to have data only for Baltimore
balt <- subset(summary,fips=="24510")
# 2.2. - similarly to 1.1 sum and group emissions by year
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
# 2.3 - plot the graph
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
# create plot 3
# 3.1 - leveraging the "balt" dataframe created on 2.1, create another, totals_type, which
# stores data for Baltimore and sum and groups by year and type
totals_type <- balt %>%
group_by(year,type) %>%
summarise(sum(Emissions))
# 3.2 - change the name of the third column so qplot doesn't prompt an error message
colnames(totals_type)[3] <- "Emissions"
# 3.3 - divide emissions by 1000 for the plot to be clearer and be expressed in thousands
totals_type[3] <- totals_type[3]/1000
qplot(year,Emissions,data=totals_type,color=type,facets=type~.) + geom_line()
?qplot
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
library(xlsx)
write.xlsx(code,.)
write.xlsx(code,"./")
write.xlsx(code,".xlsx/")
write.xlsx(code,"/code.xlsx")
write.xlsx(code,"C:/Users/Victor/Desktop/Project 2/code.xlsx")
write.csv(summary,"C:/Users/Victor/Desktop/Project 2/summary.csv")
write.csv(code,"C:/Users/Victor/Desktop/Project 2/code.csv")
