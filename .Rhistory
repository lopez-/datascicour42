setwd("c:/Users/Victor/Desktop/Quizz 3")
domestic <- read.csv("domestic.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
eds <- read.csv("getdata-data-EDSTATS_Country.csv",header=TRUE)
names(eds)[1] <- "CountryID"
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
mean(domestic$GDP)
grep("^United",countryNames), 3
grep("^United",countryNames)
eds <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",header=TRUE)
domestic
eds <- tbl_df(eds)
eds
names(eds)[1] <- "CountryID"
eds
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
mrgd
names(mrgd)
mrgd[,10]
merged[,1:5]
mrgd[,1:5]
mrgd[,6:10]
mrgd[,11:15]
View(mrgd)
names(mrgd)
?grep
grep("End",mrgd[,13],value=TRUE)
head(mrgd[,13])
grep("Fiscal",mrgd[,13],value=TRUE)
grep("Fiscal year end: June",mrgd[,13],value=TRUE)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
length(sampleTimes)
grep("^2012",sampleTimes)
length(grep("^2012",sampleTimes))
format(sampleTimes, %a %Y)
formatDate <- format(sampleTimes, "%a %Y")
formatDate
grep("^lu. 2012",formatDate)
length(grep("^lu. 2012",formatDate))
x <- rnorm(100)
hist(x)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline()
?par()
trellis.par.set()
?trellis.par.set()
?splom()
?print.trellis()
library(datasets)
data(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~facets=.~(Month))
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~Month)
sex <- c("male","male","male","male","female","female","female","female","female","female","female","female","female")
sex <- as.factor(sex)
sex
levels(sex)
levs <- levels(sex)
# set the working directory on which the datasets are stored
setwd("C:/Users/Victor/Desktop/Project 2")
# load all the libraries that will be required below
library(dplyr)
library(ggplot2)
# load the data
code <- readRDS("Source_Classification_Code.rds")
summary <- readRDS("summarySCC_PM25.rds")
# create plot 1
# 1.1 - sum all the emissions from summary and group it by year through dplyr
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
# 1.2 - in order to have a clearer view on the plot, divide emissions by 1m
totals[,2] <- totals[,2]/1000000
# 1.3 - plot the graph
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# create plot 2
# 2.1 - create a data frame "balt" from its corresponding code, fips, from summary in order to have data only for Baltimore
balt <- subset(summary,fips=="24510")
# 2.2. - similarly to 1.1 sum and group emissions by year
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
# 2.3 - plot the graph
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
# create plot 3
# 3.1 - leveraging the "balt" dataframe created on 2.1, create another, totals_type, which
# stores data for Baltimore and sum and groups by year and type
totals_type <- balt %>%
group_by(year,type) %>%
summarise(sum(Emissions))
# 3.2 - change the name of the third column so qplot doesn't prompt an error message
colnames(totals_type)[3] <- "Emissions"
# 3.3 - divide emissions by 1000 for the plot to be clearer and be expressed in thousands
totals_type[3] <- totals_type[3]/1000
# 3.4 - plot the graph
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
# plot 4
coal.code <- grep("Coal",code$EI.Sector)
sccs <- data.frame()
for(i in length(coal.code)){
sccs <- rbind(sccs,code[coal.code[i],])
}
vector <- c(1:40)
vector
?rep
data <- data.frame("sex"=rep("male",40))
data <- data.frame("sex"=rep(c("male","female"),40))
head(data)
for(i in length(vector)){}
for(i in length(vector)){}
for(i in length(vector)){
}
sccs <- rbind(sccs,code[coal.code[2],])
sccs <- data.frame()
sccs <- data.frame()
for(i in length(coal.code)){
sccs <- rbind(sccs,code[coal.code[i],])
}
for(i in 99){
sccs <- rbind(sccs,code[coal.code[i],])
}
sccs <- data.frame()
for(i in 99){
sccs <- rbind(sccs,code[coal.code[i],])
}
?grep
?grepl
code[c(1,4),]
coal.code <- grep("Coal",code$EI.Sector)
sccs <- coal.code
sccs <- code[coal.code,]
View(sccs)
summary <- tbl_df(summary)
summary
sccs <- tbl_df(sccs)
sccs
sum.sccs <- subset(summary,summary[,2]=sccs[,1])
sum.sccs <- subset(summary,summary[,2]==sccs[,1])
?join
sum.sccs <- tbl_df(sum.sccs)
sum.sccs
sum.sccs <- subset(summary,summary[,2]==sccs[,1])
remove(sum.sccs)
try <- merge(summary,sccs,by="SCC")
View(try)
str(try)
levels(as.factor(try$SCC))
summary(as.factor(try$SCC))
str(try)
try$SCC <- as.factor(try$SCC)
str(try)
str(sccs)
?levels
levels(sccs$SCC)
?unique
length(unique(sccs$SCC))
length(unique(try$SCC))
a <- data.frame(id=c(1:40),sex=rep("male","female",20))
a
a <- data.frame(id=c(1:40),sex=rep(c("male","female"),20))
a
b <- c(1,4,14,25,37,39,40)
b <- data.frame("id"=c(b))
b
merge(a,b,by="id")
sccs
View(sccs)
sccs <- code[coal.code,][1,]
View(sccs)
sccs <- code[coal.code,][,1]
View(sccs)
merge(summary,sccs,by="SCC")
sccs <- data.frame("SCC"=sccs)
sccs
str(sccs)
merge(summary,sccs,by="SCC")
try <- merge(summary,sccs,by="SCC")
str(try)
levels(as.factor(try$SCC))
length(levels(as.factor(try$SCC)))
str(summary)
length(levels(as.factor(summary$SCC)))
length(levels(as.factor(scss)))
length(levels(as.factor(sccs)))
str(sccs)
length(levels(scc))
length(levels(sccs))
length(levels(sccs$SCC))
View(sccs)
unique(sccs$SCC)
length(unique(sccs$SCC))
length(unique(summary$SCC))
try <- merge(summary,sccs,by="SCC")
length(unique(try$SCC))
# set the working directory on which the datasets are stored
setwd("C:/Users/Victor/Desktop/Project 2")
# load all the libraries that will be required below
library(dplyr)
library(ggplot2)
# load the data
code <- readRDS("Source_Classification_Code.rds")
summary <- readRDS("summarySCC_PM25.rds")
# create plot 1
# 1.1 - sum all the emissions from summary and group it by year through dplyr
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
# 1.2 - in order to have a clearer view on the plot, divide emissions by 1m
totals[,2] <- totals[,2]/1000000
# 1.3 - plot the graph
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
# create plot 2
# 2.1 - create a data frame "balt" from its corresponding code, fips, from summary in order to have data only for Baltimore
balt <- subset(summary,fips=="24510")
# 2.2. - similarly to 1.1 sum and group emissions by year
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
# 2.3 - plot the graph
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
# create plot 3
# 3.1 - leveraging the "balt" dataframe created on 2.1, create another, totals_type, which
# stores data for Baltimore and sum and groups by year and type
totals_type <- balt %>%
group_by(year,type) %>%
summarise(sum(Emissions))
# 3.2 - change the name of the third column so qplot doesn't prompt an error message
colnames(totals_type)[3] <- "Emissions"
# 3.3 - divide emissions by 1000 for the plot to be clearer and be expressed in thousands
totals_type[3] <- totals_type[3]/1000
# 3.4 - plot the graph
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
# plot 4
coal.code <- grep("Coal",code$EI.Sector)
sccs <- code[coal.code,][1,]
sccs <- data.frame("SCC"=sccs)
sum.sccs <- merge(summary,sccs,by="SCC")
str(summary)
str(sccs)
coal.code <- grep("Coal",code$EI.Sector)
sccs <- code[coal.code,][1,]
sccs <- code[coal.code,][,1]
coal.code <- grep("Coal",code$EI.Sector)
sccs <- code[coal.code,][,1]
sccs <- data.frame("SCC"=sccs)
sum.sccs <- merge(summary,sccs,by="SCC")
totals.sccs <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
sum.sccs
totals.sccs
totals.sccs <- sum.sccs %>%
group_by(year) %>%
summarise(sum(Emissions))
totals.sccs
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4")
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4") + geom_line()
colnames(totals.sccs)[2] <- "Emissions"
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4") + geom_line()
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4")
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4")
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4") + geom_line()
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4",colour="rainbow") + geom_line()
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4",colour="red") + geom_line()
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4",colour="red",legend=F) + geom_line()
?qplot
?geom_line
?qplot
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4",colour="red",legend=F) + geom_line()
view(code)
View(code)
View(summary)
onroad <- subset(summary,summary[,6]=="ON-ROAD")
onroad <- subset(summary,summary$type=="ON-ROAD")
totals.onroad <- onroad %>%
group_by(year) %>%
summarise(sum(Emissions))
totals.onroad
colnames(totals.onroad)[2] <- "Emissions"
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4") + geom_line()
qplot(year,Emissions,data=totals.onroad,ylab="Emissions of PM2.4")
qplot(year,Emissions,data=totals.onroad,ylab="Emissions of PM2.4") + geom_line()
onroad.balt <- subset(summary,summary$type=="ON-ROAD" & summary$fips=="24510")
View(onroad.balt)
onroad.la <- subset(summary,summary$type=="ON-ROAD" & summary$fips=="06037")
totals.onroad.balt <- onroad.balt %>%
group_by(year) %>%
summarise(sum(Emissions))
totals.onroad.la <- onroad.la %>%
group_by(year) %>%
summarise(sum(Emissions))
onroad.balt.la <- subset(summary,summary$type=="ON-ROAD" & (summary$fips=="24510" | summary$fips=="06037")
)
View(onroad.balt.la)
totals.onroad.balt.la <- onroad.balt.la %>%
group_by(year,fips) %>%
summarise(sum(Emissions))
View(totals.onroad.balt.la)
qplot(year,Emissions,data=totals_type,color=fips,facets=fips~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
colnames(totals.onroad.balt.la)[2] <- "Emissions"
colnames(totals.onroad.balt.la)[2] <- "fips"
View(totals.onroad.balt.la)
colnames(totals.onroad.balt.la)[3] <- "fips"
View(totals.onroad.balt.la)
colnames(totals.onroad.balt.la)[3] <- "Emissions"
View(totals.onroad.balt.la)
qplot(year,Emissions,data=totals.onroad.balt.la,color=fips,facets=fips~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
?qplot
qplot(year,Emissions,data=totals.onroad.balt.la,color=fips,facets=fips~.,ylab="Emissions of PM2.4",ylab=c("Baltimore","Los Angeles")) + geom_line()
qplot(year,Emissions,data=totals.onroad.balt.la,color=fips,facets=fips~.,ylab="Emissions of PM2.4") + geom_line()
?qplot
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la$fips=="06037"){
totals.onroad.balt.la=="Los Angeles"
}
}
View(totals.onroad.balt.la)
totals.onroad.balt.la$fips=="06037"
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2]=="Los Angeles"
}
}
View(totals.onroad.balt.la)
View(totals.onroad.balt.la)
totals.onroad.balt.la[1,2]=="06037"
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2]="Los Angeles"
}
}
View(totals.onroad.balt.la)
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2] <- "Los Angeles"
}
}
View(totals.onroad.balt.la)
totals.onroad.balt.la[1,2] <- "Los Angeles"
View(totals.onroad.balt.la)
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2] <- "Los Angeles"
} else {
totals.onroad.balt.la[i,2] <- "Baltimore"
}
}
View(totals.onroad.balt.la)
totals.onroad.balt.la <- onroad.balt.la %>%
group_by(year,fips) %>%
summarise(sum(Emissions))
View(totals.onroad.balt.la)
for(i in nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2] <- "Los Angeles"
} else {
totals.onroad.balt.la[i,2] <- "Baltimore"
}
}
View(totals.onroad.balt.la)
for(i in 1:nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2] <- "Los Angeles"
} else {
totals.onroad.balt.la[i,2] <- "Baltimore"
}
}
View(totals.onroad.balt.la)
colnames(totals.onroad.balt.la)[3] <- "Emissions"
qplot(year,Emissions,data=totals.onroad.balt.la,color=fips,facets=fips~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
png("plot1.png",width=480,height=480)
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
dev.off()
# create plot 1
# 1.1 - sum all the emissions from summary and group it by year through dplyr
totals <- summary %>%
group_by(year) %>%
summarise(sum(Emissions))
# 1.2 - in order to have a clearer view on the plot, divide emissions by 1m
totals[,2] <- totals[,2]/1000000
# 1.3 - plot the graph
png("plot1.png",width=480,height=480)
barplot(totals[,2],names.arg=totals[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4(millions)",las=1)
dev.off()
# create plot 2
# 2.1 - create a data frame "balt" from its corresponding code, fips, from summary in order to have data only for Baltimore
balt <- subset(summary,fips=="24510")
# 2.2. - similarly to 1.1 sum and group emissions by year
totals_balt <- balt %>%
group_by(year) %>%
summarise(sum(Emissions))
# 2.3 - plot the graph
png("plot2.png",width=480,height=480)
barplot(totals_balt[,2],names.arg=totals_balt[,1],space=F,col=rainbow(4),main="Emissions of PM2.4",xlab="Year",ylab="Emissions of PM2.4",las=1)
dev.off()
# create plot 3
# 3.1 - leveraging the "balt" dataframe created on 2.1, create another, totals_type, which
# stores data for Baltimore and sum and groups by year and type
totals_type <- balt %>%
group_by(year,type) %>%
summarise(sum(Emissions))
# 3.2 - change the name of the third column so qplot doesn't prompt an error message
colnames(totals_type)[3] <- "Emissions"
# 3.3 - divide emissions by 1000 for the plot to be clearer and be expressed in thousands
totals_type[3] <- totals_type[3]/1000
# 3.4 - plot the graph
png("plot3.png",width=480,height=480)
qplot(year,Emissions,data=totals_type,color=type,facets=type~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
dev.off()
# plot 4
coal.code <- grep("Coal",code$EI.Sector)
sccs <- code[coal.code,][,1]
sccs <- data.frame("SCC"=sccs)
sum.sccs <- merge(summary,sccs,by="SCC")
totals.sccs <- sum.sccs %>%
group_by(year) %>%
summarise(sum(Emissions))
colnames(totals.sccs)[2] <- "Emissions"
png("plot4.png",width=480,height=480)
qplot(year,Emissions,data=totals.sccs,ylab="Emissions of PM2.4") + geom_line()
dev.off()
# plot 5
onroad <- subset(summary,summary$type=="ON-ROAD")
totals.onroad <- onroad %>%
group_by(year) %>%
summarise(sum(Emissions))
colnames(totals.onroad)[2] <- "Emissions"
png("plot5.png",width=480,height=480)
qplot(year,Emissions,data=totals.onroad,ylab="Emissions of PM2.4") + geom_line()
dev.off()
# plot 6
onroad.balt.la <- subset(summary,summary$type=="ON-ROAD" & (summary$fips=="24510" | summary$fips=="06037"))
onroad.la <- subset(summary,summary$type=="ON-ROAD" & summary$fips=="06037")
totals.onroad.balt.la <- onroad.balt.la %>%
group_by(year,fips) %>%
summarise(sum(Emissions))
for(i in 1:nrow(totals.onroad.balt.la)){
if(totals.onroad.balt.la[i,2]=="06037"){
totals.onroad.balt.la[i,2] <- "Los Angeles"
} else {
totals.onroad.balt.la[i,2] <- "Baltimore"
}
}
colnames(totals.onroad.balt.la)[3] <- "Emissions"
png("plot6.png",width=480,height=480)
qplot(year,Emissions,data=totals.onroad.balt.la,color=fips,facets=fips~.,ylab="Emissions of PM2.4 (thousands)") + geom_line()
dev.off()
